-- Compiled with roblox-ts v2.3.0-dev-ff69514
local TS = _G[script]
local UserInputService = TS.import(script, TS.getModule(script, "@rbxts", "services")).UserInputService
local source = TS.import(script, TS.getModule(script, "@rbxts", "vide").src).source
local useEventListener = TS.import(script, script.Parent, "use-event-listener").useEventListener
local lockSource = TS.import(script, script.Parent, "utils").lockSource
--[[
	*
	 * Returns a binding to the mouse position.
	 * @param listener Optional listener to be called when the mouse position changes.
	 * @returns A binding to mouse position.
	 
]]
local function useMouse(listener)
	local mouse = source(UserInputService:GetMouseLocation())
	useEventListener(UserInputService.InputBegan, function(input)
		local mouseMovement = input.UserInputType == Enum.UserInputType.MouseMovement
		local touch = input.UserInputType == Enum.UserInputType.Touch
		if mouseMovement or touch then
			local location = UserInputService:GetMouseLocation()
			mouse(location)
			if listener then
				listener(location)
			end
		end
	end)
	if listener then
		listener(mouse())
	end
	return lockSource(mouse)
end
return {
	useMouse = useMouse,
}
