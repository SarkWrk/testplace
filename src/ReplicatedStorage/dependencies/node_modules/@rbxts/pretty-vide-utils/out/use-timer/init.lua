-- Compiled with roblox-ts v2.3.0-dev-ff69514
local TS = _G[script]
local source = TS.import(script, TS.getModule(script, "@rbxts", "vide").src).source
local useEventListener = TS.import(script, script.Parent, "use-event-listener").useEventListener
local RunService = TS.import(script, TS.getModule(script, "@rbxts", "services")).RunService
local lockSource = TS.import(script, script.Parent, "utils").lockSource
--[[
	*
	 * Creates a timer that can be used to track a value over time.
	 * @param initialValue The initial value of the timer.
	 * @returns A timer object.
	 
]]
local function useTimer(initial)
	if initial == nil then
		initial = 0
	end
	local timer = source(initial)
	local started = true
	useEventListener(RunService.Heartbeat, function(delta)
		if started then
			timer(timer() + delta)
		end
	end)
	local function start()
		started = true
	end
	local function stop()
		started = false
	end
	local function reset()
		timer(0)
	end
	local function set(value)
		timer(value)
	end
	return {
		timer = lockSource(timer),
		start = start,
		stop = stop,
		reset = reset,
		set = set,
	}
end
return {
	useTimer = useTimer,
}
