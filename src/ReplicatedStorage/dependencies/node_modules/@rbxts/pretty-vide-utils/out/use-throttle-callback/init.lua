-- Compiled with roblox-ts v2.3.0-dev-ff69514
local TS = _G[script]
local throttle = TS.import(script, TS.getModule(script, "@rbxts", "set-timeout").out).throttle
local cleanup = TS.import(script, TS.getModule(script, "@rbxts", "vide").src).cleanup
local function useThrottleCallback(callback, options)
	if options == nil then
		options = {}
	end
	local throttled = throttle(function(...)
		local args = { ... }
		return callback(unpack(args))
	end, options.wait, options)
	cleanup(function()
		return throttled.cancel()
	end)
	return {
		run = throttled,
		cancel = throttled.cancel,
		flush = throttled.flush,
		pending = throttled.pending,
	}
end
return {
	useThrottleCallback = useThrottleCallback,
}
