-- Compiled with roblox-ts v2.3.0-dev-ff69514
local TS = _G[script]
local setInterval = TS.import(script, TS.getModule(script, "@rbxts", "set-timeout").out).setInterval
local _vide = TS.import(script, TS.getModule(script, "@rbxts", "vide").src)
local cleanup = _vide.cleanup
local effect = _vide.effect
local getDerivable = TS.import(script, script.Parent, "utils").getDerivable
local function useInterval(callback, delay, immediate)
	if immediate == nil then
		immediate = false
	end
	local cancel = nil
	local function clear()
		local _result = cancel
		if _result ~= nil then
			_result()
		end
	end
	effect(function()
		local _delay = getDerivable(delay)
		if _delay == nil or _delay < 0 then
			return nil
		end
		if immediate then
			callback()
		end
		cancel = setInterval(callback, _delay)
		cleanup(clear)
	end)
	return clear
end
return {
	useInterval = useInterval,
}
