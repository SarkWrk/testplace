-- Compiled with roblox-ts v2.3.0-dev-ff69514
local TS = _G[script]
local RunService = TS.import(script, TS.getModule(script, "@rbxts", "services")).RunService
local cleanup = TS.import(script, TS.getModule(script, "@rbxts", "vide").src).cleanup
--[[
	*
	 * Defers a callback to be executed on the next Heartbeat frame. Consecutive
	 * calls to the returned `execute` function will cancel the previous call.
	 * @param callback The callback to defer
	 * @returns A tuple containing the `execute` and `cancel` functions
	 
]]
local function useDeferCallback(callback)
	local connection = nil
	local function cancel()
		if connection ~= nil then
			connection:Disconnect()
			connection = nil
		end
	end
	local function execute(...)
		local args = { ... }
		cancel()
		connection = RunService.Heartbeat:Once(function()
			connection = nil
			callback(unpack(args))
		end)
	end
	cleanup(cancel)
	return execute, cancel
end
return {
	useDeferCallback = useDeferCallback,
}
