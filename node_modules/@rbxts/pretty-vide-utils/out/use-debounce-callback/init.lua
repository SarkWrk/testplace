-- Compiled with roblox-ts v2.3.0-dev-ff69514
local TS = _G[script]
local debounce = TS.import(script, TS.getModule(script, "@rbxts", "set-timeout").out).debounce
local cleanup = TS.import(script, TS.getModule(script, "@rbxts", "vide").src).cleanup
local function useDebounceCallback(callback, options)
	local _exp = function(...)
		local args = { ... }
		callback(unpack(args))
	end
	local _result = options
	if _result ~= nil then
		_result = _result.wait
	end
	local debounced = debounce(_exp, _result, options)
	cleanup(function()
		return debounced.cancel()
	end)
	return {
		run = debounced,
		cancel = debounced.cancel,
		flush = debounced.flush,
		pending = debounced.pending,
	}
end
return {
	useDebounceCallback = useDebounceCallback,
}
