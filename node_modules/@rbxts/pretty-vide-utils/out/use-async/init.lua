-- Compiled with roblox-ts v2.3.0-dev-ff69514
local TS = _G[script]
local _vide = TS.import(script, TS.getModule(script, "@rbxts", "vide").src)
local derive = _vide.derive
local effect = _vide.effect
local useAsyncCallback = TS.import(script, script.Parent, "use-async-callback").useAsyncCallback
--[[
	*
	 * Returns a tuple containing the result and status of a promise. dependencies will be tracked
	 * and pending promises will be cancelled, and a new promise
	 * will be started.
	 * @param callback The async callback.
	 * @returns The result and status of the promise.
	 
]]
local function useAsync(callback)
	local state, caller = useAsyncCallback(callback)
	local value = derive(function()
		return state().value
	end)
	local status = derive(function()
		return state().status
	end)
	local message = derive(function()
		return state().message
	end)
	effect(function()
		return caller()
	end)
	return value, status, message
end
return {
	useAsync = useAsync,
}
